MAP!

Cam.cs
	void Start ()								//nothing
	void Update ()								//nothing
	public void SetTarget (GameObject a)

Character.cs									//: Unarou
	void Start ()								//nothing
	internal void Update ()							//updates elevation
	internal void Position ()

MapGen.cs									//: Unarou
	void Start ()								//nothing
	void Update ()								//nothing
	internal void GenerateMap ()
	void TileGenerator (flaot x, float y, int gx, int gy, int gz)
	int Dice (int x)
	bool MultipleMaxes (int a, int b, int c, int d, int e)

Skills.cs									//: Unarou
	void Start ()								//nothing
	internal void SetUp ()
	void Update ()
	internal void AddExp (int a)

Tile.cs										//: Unarou
	void Start ()								//nothing
		ElevationDiff ()
		AllCheck ()
	void Update								//nothing
	internal void MoveCheck ()
	internal void AllCheck ()
	internal void VisionCheck ()
	void ElevationDiff ()
		void Diff(oEle, oW, a)
	void Diff(int oEle, int oW, int a)
	void OnMouseUp ()
		MoveCheck ()
		MapGeneration ()
		foreach h.VisionCheck ()
		PlayerB.ChanceTexts ()

Unarou.cs
	void Start ()
		Emilia.Position ()
		Flora.Position ()
		characters<Skills> ().SetUp ()
		MapGeneration ()
		characters<Character> ().Update ()
		MapGeneration (1)
	void Update								//nothing
	protected int Distance (int x0, int y0, int z0, int x1, int y1, int z1)	//tool
	protected void MapGeneration ()
		foreach MapTile<Tile> ().SetUp ()
	protected void Mapgeneration (int xenomorph)
		foreach MapTile<Tile> ().VisionCheck ()

UnlimitedButtonWorks.cs								//: Unarou
	void Start ()
		if PlayerB SelectChar ();
	void Update ()
	internal void ChangeTexts ()
	public void SelectChar ()
		PlayerTile<Tile> ().VisionCheck ()
		ChangeTexts ()
	public void MoveChar ()
		PlayerTile<Tile> ().MoveCheck ()
	public void Action
	public void AddLevel ()
	Public void EndTurn ()
		ChangeTexts ()
		SelectChar ()